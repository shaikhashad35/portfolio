{"version":3,"file":"static/js/588.7dc31a96.chunk.js","mappings":"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","sources":["components/common/Section.tsx","components/Experience/index.tsx","utils/animations.ts"],"sourcesContent":["import { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { motion, Variants } from 'framer-motion';\nimport { withPerformanceTracking } from '../../utils/performance';\n\ninterface SectionProps {\n  id: string;\n  children: React.ReactNode;\n  className?: string;\n  variants?: Variants;\n}\n\nconst SectionContainer = styled(motion.section)`\n  min-height: 100vh;\n  padding: 6rem 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: ${({ theme }) => theme.colors.text};\n  position: relative;\n  overflow: hidden;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    padding: 4rem 1rem;\n  }\n`;\n\nconst defaultVariants: Variants = {\n  hidden: {\n    opacity: 0,\n    y: 50\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.6,\n      ease: 'easeOut'\n    }\n  }\n};\n\nconst Section = forwardRef<HTMLElement, SectionProps>(({ \n  id, \n  children, \n  className,\n  variants = defaultVariants \n}, ref) => {\n  return (\n    <SectionContainer\n      ref={ref}\n      id={id}\n      className={className}\n      initial=\"hidden\"\n      whileInView=\"visible\"\n      viewport={{ once: true, margin: \"-100px\" }}\n      variants={variants}\n    >\n      {children}\n    </SectionContainer>\n  );\n});\n\nSection.displayName = 'Section';\n\nexport default withPerformanceTracking(Section, 'Section');","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Section from '../common/Section';\nimport { fadeInUp, staggerContainer } from '../../utils/animations';\nimport { FiBriefcase, FiMapPin, FiCalendar } from 'react-icons/fi';\n\ninterface Experience {\n  company: string;\n  role: string;\n  period: string;\n  location: string;\n  descriptions: string[];\n}\n\nconst ExperienceContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst Title = styled.h2`\n  font-size: clamp(2rem, 5vw, 2.5rem);\n  text-align: center;\n  margin-bottom: 3rem;\n  color: ${({ theme }) => theme.colors.textLight};\n`;\n\nconst Timeline = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst ExperienceCard = styled(motion.div)`\n  background-color: ${({ theme }) => theme.colors.secondary};\n  border-radius: 8px;\n  padding: 2rem;\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 2px;\n    height: 100%;\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nconst CompanyHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 1rem;\n  flex-wrap: wrap;\n  gap: 1rem;\n`;\n\nconst CompanyTitle = styled.h3`\n  color: ${({ theme }) => theme.colors.textLight};\n  font-size: 1.2rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst Role = styled.h4`\n  color: ${({ theme }) => theme.colors.accent};\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst MetaInfo = styled.div`\n  display: flex;\n  gap: 1.5rem;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.9rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst MetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n\n  svg {\n    color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n\n  li {\n    color: ${({ theme }) => theme.colors.text};\n    margin-bottom: 1rem;\n    position: relative;\n    padding-left: 1.5rem;\n    line-height: 1.6;\n\n    &::before {\n      content: '▹';\n      position: absolute;\n      left: 0;\n      color: ${({ theme }) => theme.colors.accent};\n    }\n  }\n`;\n\nconst experiences: Experience[] = [\n  {\n    company: 'Microsoft',\n    role: 'Software Engineer II',\n    period: 'Aug 2024 - Present',\n    location: 'Remote',\n    descriptions: [\n      'Working as Backend Engineer for Microsoft Defender for Endpoints',\n      'Leveraging GitHub Copilot/ChatGPT to prototype backend features, cutting development time nearly in half.'\n    ]\n  },\n  {\n    company: 'S&P Global',\n    role: 'Senior Software Engineer',\n    period: 'Nov 2021 - Aug 2024',\n    location: 'India',\n    descriptions: [\n      'Engineered a Python package for sharded DB connection management, reducing master DB load by 70% and boosting connection resiliency.',\n      'Designed an automated regression testing system for backend service, cutting manual QA cycles by 30%, reducing post release bugs.',\n      'Built a Python microservice to extract financial tables from 100+ PDFs daily, cutting research analysts\\' data prep time from 1 hour to 15 minutes per report.',\n      'Streamlined SQL data porting to UAT by implementing a graph-based topological sorting algorithm that resolved primary key dependency conflicts across 100+ relational tables.',\n      'Built a Slack bot enabling support teams to resolve recurring issues, saving engineering 1–2 hours per sprint.',\n      'Implemented a robust CI/CD test suite for 3 microservices using in-memory databases, increasing test coverage by 40–50%.'\n    ]\n  },\n  {\n    company: 'Nagarro ATCS',\n    role: 'Associate Software Engineer',\n    period: 'Nov 2020 - Sept 2021',\n    location: 'India',\n    descriptions: [\n      'Developed Outlook plugin capturing car deals mail data via REST APIs, reducing manual entry by 50%.',\n      'Designed a .NET backend for a branch management system supporting 350+ Indian bank branches.',\n      'Led development of car dealership module with dashboard and deal notifications, directly contributing to $1M+ monthly revenue.',\n      'Enhanced 2 BFSI apps by integrating logging, caching, and mailer services, boosting performance and reliability.'\n    ]\n  },\n  {\n    company: 'U-TO Solutions',\n    role: 'Associate Software Engineer',\n    period: 'Nov 2019 - Oct 2020',\n    location: 'India',\n    descriptions: [\n      'Optimized movie rights acquisition dashboard load time from 3-5 minutes to 10 seconds via bucket-based algorithm and background pre-computation.',\n      'Delivered key features for SaaS platform used by Sony, Viacom, enabling efficient digital rights acquisition & syndication for millions of media assets, improving client workflows.'\n    ]\n  }\n];\n\nconst Experience = () => {\n  return (\n    <Section id=\"experience\">\n      <ExperienceContainer>\n        <Title>Experience</Title>\n        <Timeline\n          variants={staggerContainer}\n          initial=\"initial\"\n          animate=\"animate\"\n        >\n          {experiences.map((exp, index) => (\n            <ExperienceCard key={index} variants={fadeInUp}>\n              <CompanyHeader>\n                <div>\n                  <CompanyTitle>{exp.company}</CompanyTitle>\n                  <Role>{exp.role}</Role>\n                </div>\n              </CompanyHeader>\n              <MetaInfo>\n                <MetaItem>\n                  <FiCalendar />\n                  <span>{exp.period}</span>\n                </MetaItem>\n                <MetaItem>\n                  <FiMapPin />\n                  <span>{exp.location}</span>\n                </MetaItem>\n              </MetaInfo>\n              <List>\n                {exp.descriptions.map((desc, i) => (\n                  <li key={i}>{desc}</li>\n                ))}\n              </List>\n            </ExperienceCard>\n          ))}\n        </Timeline>\n      </ExperienceContainer>\n    </Section>\n  );\n};\n\nexport default Experience;","import { Variants } from 'framer-motion';\n\nexport const fadeInUp: Variants = {\n  hidden: {\n    opacity: 0,\n    y: 20\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.6,\n      ease: 'easeOut'\n    }\n  }\n};\n\nexport const staggerContainer: Variants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2\n    }\n  }\n};\n\nexport const scaleIn: Variants = {\n  hidden: {\n    opacity: 0,\n    scale: 0.8\n  },\n  visible: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.5,\n      ease: 'easeOut'\n    }\n  }\n};\n\nexport const slideIn = (direction: 'left' | 'right' | 'up' | 'down'): Variants => {\n  const directions = {\n    left: { x: -100, y: 0 },\n    right: { x: 100, y: 0 },\n    up: { x: 0, y: 100 },\n    down: { x: 0, y: -100 }\n  };\n\n  return {\n    hidden: {\n      opacity: 0,\n      ...directions[direction]\n    },\n    visible: {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        ease: 'easeOut'\n      }\n    }\n  };\n};"],"names":["SectionContainer","styled","motion","section","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primary","_ref2","text","_ref3","breakpoints","md","defaultVariants","hidden","opacity","y","visible","transition","duration","ease","Section","forwardRef","_ref4","ref","id","children","className","variants","_jsx","initial","whileInView","viewport","once","margin","displayName","withPerformanceTracking","ExperienceContainer","div","Title","h2","_templateObject2","textLight","Timeline","_templateObject3","ExperienceCard","_templateObject4","secondary","accent","CompanyHeader","_templateObject5","CompanyTitle","h3","_templateObject6","Role","h4","_templateObject7","_ref5","MetaInfo","_templateObject8","_ref6","MetaItem","_templateObject9","_ref7","List","ul","_templateObject0","_ref8","_ref9","experiences","company","role","period","location","descriptions","Experience","_jsxs","staggerContainer","animate","map","exp","index","fadeInUp","FiCalendar","FiMapPin","desc","i","staggerChildren","slideIn","direction","_objectSpread","left","x","right","up","down"],"sourceRoot":""}